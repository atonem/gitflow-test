# TODO:
# store step output
# https://stackoverflow.com/a/57989070
# create issue/pr comment: https://octokit.github.io/rest.js/v18#issues-create-comment
# update review comment: https://octokit.github.io/rest.js/v18#pulls-update-review-comment
name: "Verify PR Branch Name"
on:
  pull_request_target:
    branches:
      - master
      - develop
jobs:
  verify_base_head_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Verify develop head branch name
        id: verify_develop
        if: github.base_ref == 'develop'
        run: |
          if [[ $GITHUB_HEAD_REF == feature/* ]] \
          || [[ $GITHUB_HEAD_REF == bugfix/* ]] \
          || [[ $GITHUB_HEAD_REF == backmerge/* ]] \
          || [[ $GITHUB_HEAD_REF == master ]]
          then
            echo "## Verify branch name: :white_check_mark: success" >> $GITHUB_STEP_SUMMARY
            echo "\`$GITHUB_HEAD_REF\` is a valid branch to merge in to \`$GITHUB_BASE_REF\`." \
              >> $GITHUB_STEP_SUMMARY

            # store summary as output
            echo "comment_body=\"$(cat $GITHUB_STEP_SUMMARY)\"" >> $GITHUB_OUTPUT
          else
            echo "## Verify branch name: :x: Failure" >> $GITHUB_STEP_SUMMARY
            echo "\`$GITHUB_HEAD_REF\` is **not** a valid branch to merge in to \`$GITHUB_BASE_REF\`." \
              >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Valid branch patterns" >> $GITHUB_STEP_SUMMARY
            echo '- `feature/*`' >> $GITHUB_STEP_SUMMARY
            echo '- `bugfix/*`' >> $GITHUB_STEP_SUMMARY
            echo '- `backmerge/*`' >> $GITHUB_STEP_SUMMARY
            echo '- `master`' >> $GITHUB_STEP_SUMMARY

            # store summary as output
            echo "comment_body=\"$(cat $GITHUB_STEP_SUMMARY)\"" >> $GITHUB_OUTPUT

            exit 1
          fi

      - name: Verify master head branch name
        id: verify_master
        if: github.base_ref == 'master'
        run: |
          if [[ $GITHUB_HEAD_REF == release/* ]] \
          || [[ $GITHUB_HEAD_REF == hotfix/* ]]
          then
            echo "## Verify branch name: :white_check_mark: success" >> $GITHUB_STEP_SUMMARY
            echo "\`$GITHUB_HEAD_REF\` is a valid branch to merge in to \`$GITHUB_BASE_REF\`." \
              >> $GITHUB_STEP_SUMMARY

            # store summary as output
            echo "comment_body=\"$(cat $GITHUB_STEP_SUMMARY)\"" >> $GITHUB_OUTPUT
          else
            echo "## Verify branch name: :x: Failure" >> $GITHUB_STEP_SUMMARY
            echo "\`$GITHUB_HEAD_REF\` is **not** a valid branch to merge in to \`$GITHUB_BASE_REF\`." \
              >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Valid branch patterns" >> $GITHUB_STEP_SUMMARY
            echo '- `release/*`' >> $GITHUB_STEP_SUMMARY
            echo '- `hotfix/*`' >> $GITHUB_STEP_SUMMARY

            # store summary as output
            echo "comment_body=\"$(cat $GITHUB_STEP_SUMMARY)\"" >> $GITHUB_OUTPUT

            exit 1
          fi

      - name: Find existing comment
        uses: peter-evans/find-comment@v3
        id: find_comment
        with:
          issue-number: github.event.pull_request.number
          comment-author: github-actions
          body-includes: Verify branch name

      - name: Create comment
        if: steps.find_comment.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: github.event.pull_request.number
          body: |
            This comment was written by a bot!

      - name: Update comment
        if: steps.find_comment.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: steps.find_comment.outputs.comment-id
          body: |
            This comment has been updated!
