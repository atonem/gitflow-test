# see https://octokit.github.io/rest.js/v20#pulls-merge
name: "Merge PR"
on:
  pull_request_target:
    types:
      - labeled
    branches:
      - master
      - develop
jobs:
  merge_branch:
    if: github.event.label.name == 'merge'
    runs-on: ubuntu-latest
    steps:
      - run: echo "$GITHUB_CONTEXT"
      - uses: actions/github-script@v7
        with:
          script: |
            const MERGE_METHOD_MAP = {
              develop: {
                merge: [/^master$/, /^backmerge\/.+/],
                squash: [/^feature\/.+/, /^bugfix\/.+/],
              },
              master: {
                merge: [/^release\/.+$/],
                squash: [/^hotfix\/.+$/],
              },
            };
            function getMergeMethod(baseName, headName) {
              const map = MERGE_METHOD_MAP[baseName];
              const entries = Object.entries(map);
              for (const [strat, patterns] of entries) {
                if (patterns.some(pattern => pattern.test(headName))) {
                  return strat;
                }
              }
              throw new Error(
                `No matching merge strategy found for base (${baseName}) from head (${headName}) found`,
              );
            }
            const { repo, owner } = context.repo;
            const {
              base,
              head,
              label,
              number: pull_number,
              mergeable,
              merged,
              draft,
            } = context.payload.pull_request ?? {};
            const BASE_NAME = base?.name;
            const { sha, name: HEAD_NAME } = head ?? {};
            const merge_method = getMergeMethod(BASE_NAME, HEAD_NAME);
            if (draft || !mergeable || merged) {
              throw new Error(
                `PR is alredy merged (${merged}), not mergeable (${mergeable}), or in draft (${draft}) mode.`,
              );
            }
            github.rest.pulls.merge({
              owner,
              repo,
              pull_number,
              // NOTE: make sure only performing a merge on the commit the label was added
              sha,
            });

      - name: Remove "merge" label on failure
        if: 'failure() || cancelled()'
        run: gh pr edit ${{ github.event.number }} --remove-label merge


